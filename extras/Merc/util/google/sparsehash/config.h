////////////////////////////////////////////////////////////////////////////////
// Mercury and Colyseus Software Distribution 
// 
// Copyright (C) 2004-2005 Ashwin Bharambe (ashu@cs.cmu.edu)
//               2004-2005 Jeffrey Pang    (jeffpang@cs.cmu.edu)
//                    2004 Mukesh Agrawal  (mukesh@cs.cmu.edu)
// 
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 2, or (at
// your option) any later version.
// 
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
// USA
////////////////////////////////////////////////////////////////////////////////
/* src/google/sparsehash/config.h.  Generated by configure.  */
/* src/google/sparsehash_config.h.in.  Generated from configure.ac by autoheader.  */

/* Namespace for Google classes */
#define GOOGLE_NAMESPACE std

/* the namespace of hash_map */
#define HASH_NAMESPACE __gnu_cxx

/* Define to 1 if you have the <ext/hash_fun.h> header file. */
/* #undef HAVE_EXT_HASH_FUN_H */

/* define if the compiler has hash_map */
#define HAVE_EXT_HASH_MAP 1

/* define if the compiler has hash_set */
#define HAVE_EXT_HASH_SET 1

/* Define to 1 if you have the <ext/stl_hash_fun.h> header file. */
#define HAVE_EXT_STL_HASH_FUN_H 1

/* Define to 1 if you have the <hash_fun.h> header file. */
/* #undef HAVE_HASH_FUN_H */

/* define if the compiler has hash_map */
/* #undef HAVE_HASH_MAP */

/* define if the compiler has hash_set */
/* #undef HAVE_HASH_SET */

/* Define to 1 if you have the <inttypes.h> header file. */
#define HAVE_INTTYPES_H 1

/* Define to 1 if you have the `memcpy' function. */
#define HAVE_MEMCPY 1

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the <memory.h> header file. */
#define HAVE_MEMORY_H 1

/* define if the compiler implements namespaces */
#define HAVE_NAMESPACES 1

/* Define to 1 if you have the <stdint.h> header file. */
#define HAVE_STDINT_H 1

/* Define to 1 if you have the <stdlib.h> header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the <stl_hash_fun.h> header file. */
/* #undef HAVE_STL_HASH_FUN_H */

/* Define to 1 if you have the <strings.h> header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the <string.h> header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the <sys/resource.h> header file. */
#define HAVE_SYS_RESOURCE_H 1

/* Define to 1 if you have the <sys/stat.h> header file. */
#define HAVE_SYS_STAT_H 1

/* Define to 1 if you have the <sys/types.h> header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the <unistd.h> header file. */
#define HAVE_UNISTD_H 1

/* Name of package */
#define PACKAGE "sparsehash"

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT "opensource@google.com"

/* Define to the full name of this package. */
#define PACKAGE_NAME "sparsehash"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "sparsehash 0.1"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "sparsehash"

/* Define to the version of this package. */
#define PACKAGE_VERSION "0.1"

/* Define to 1 if you have the ANSI C header files. */
#define STDC_HEADERS 1

/* the namespace where STL code like vector<> is defined */
#define STL_NAMESPACE std

/* does STL support iterator-tags? */
#define UNDERSTANDS_ITERATOR_TAGS 1

/* Version number of package */
#define VERSION "0.1"

/* Stops putting the code inside the Google namespace */
#define _END_GOOGLE_NAMESPACE_ };

/* Puts following code inside the Google namespace */
#define _START_GOOGLE_NAMESPACE_ namespace GOOGLE_NAMESPACE {
// vim: set sw=4 sts=4 ts=8 noet: 
// Local Variables:
// Mode: c++
// c-basic-offset: 4
// tab-width: 8
// indent-tabs-mode: t
// End:
